// <auto-generated />
using System;
using ListaZakupow.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ListaZakupow.Server.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20210227174502_QuickFix")]
    partial class QuickFix
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ListaZakupow.Model.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApartmentNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumOfBuilding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrdersId")
                        .HasColumnType("int");

                    b.Property<int?>("OrdersId1")
                        .HasColumnType("int");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("PostAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrdersId");

                    b.HasIndex("OrdersId1");

                    b.HasIndex("UserId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("ListaZakupow.Model.Delivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrdersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrdersId");

                    b.ToTable("Delivery");
                });

            modelBuilder.Entity("ListaZakupow.Model.Orders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfPurchase")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ListaZakupow.Model.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrdersId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrdersId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("ListaZakupow.Model.PhotoGallery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("PhotoGallery");
                });

            modelBuilder.Entity("ListaZakupow.Model.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("ListaZakupow.Model.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCategory");
                });

            modelBuilder.Entity("ListaZakupow.Model.ProductOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int?>("OrdersId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrdersId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductOrder");
                });

            modelBuilder.Entity("ListaZakupow.Model.ProductPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmountOfItemsAtSale")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromWhen")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsSale")
                        .HasColumnType("bit");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ToWhen")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductPrice");
                });

            modelBuilder.Entity("ListaZakupow.Model.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductType");
                });

            modelBuilder.Entity("ListaZakupow.Model.ShopingList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ShopingList");
                });

            modelBuilder.Entity("ListaZakupow.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ProductShopingList", b =>
                {
                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.Property<int>("ShopingListsId")
                        .HasColumnType("int");

                    b.HasKey("ProductsId", "ShopingListsId");

                    b.HasIndex("ShopingListsId");

                    b.ToTable("ProductShopingList");
                });

            modelBuilder.Entity("ListaZakupow.Model.Address", b =>
                {
                    b.HasOne("ListaZakupow.Model.Orders", null)
                        .WithMany("DeliveryAddresss")
                        .HasForeignKey("OrdersId");

                    b.HasOne("ListaZakupow.Model.Orders", null)
                        .WithMany("InvoiceAddresss")
                        .HasForeignKey("OrdersId1");

                    b.HasOne("ListaZakupow.Model.User", null)
                        .WithMany("Addresss")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ListaZakupow.Model.Delivery", b =>
                {
                    b.HasOne("ListaZakupow.Model.Orders", null)
                        .WithMany("DeliveryType")
                        .HasForeignKey("OrdersId");
                });

            modelBuilder.Entity("ListaZakupow.Model.Payment", b =>
                {
                    b.HasOne("ListaZakupow.Model.Orders", null)
                        .WithMany("PaymentType")
                        .HasForeignKey("OrdersId");
                });

            modelBuilder.Entity("ListaZakupow.Model.PhotoGallery", b =>
                {
                    b.HasOne("ListaZakupow.Model.Product", null)
                        .WithMany("PhotosGallery")
                        .HasForeignKey("ProductId");

                    b.HasOne("ListaZakupow.Model.User", null)
                        .WithMany("Photos")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ListaZakupow.Model.Product", b =>
                {
                    b.HasOne("ListaZakupow.Model.User", "User")
                        .WithMany("Products")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ListaZakupow.Model.ProductCategory", b =>
                {
                    b.HasOne("ListaZakupow.Model.Product", null)
                        .WithMany("ProductsCategory")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("ListaZakupow.Model.ProductOrder", b =>
                {
                    b.HasOne("ListaZakupow.Model.Orders", null)
                        .WithMany("ProductOrders")
                        .HasForeignKey("OrdersId");

                    b.HasOne("ListaZakupow.Model.Product", null)
                        .WithMany("ProductOrders")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("ListaZakupow.Model.ProductPrice", b =>
                {
                    b.HasOne("ListaZakupow.Model.Product", null)
                        .WithMany("ProductPrices")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("ListaZakupow.Model.ProductType", b =>
                {
                    b.HasOne("ListaZakupow.Model.Product", null)
                        .WithMany("ProductTypes")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("ListaZakupow.Model.ShopingList", b =>
                {
                    b.HasOne("ListaZakupow.Model.User", null)
                        .WithMany("ShopingLists")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("ProductShopingList", b =>
                {
                    b.HasOne("ListaZakupow.Model.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ListaZakupow.Model.ShopingList", null)
                        .WithMany()
                        .HasForeignKey("ShopingListsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ListaZakupow.Model.Orders", b =>
                {
                    b.Navigation("DeliveryAddresss");

                    b.Navigation("DeliveryType");

                    b.Navigation("InvoiceAddresss");

                    b.Navigation("PaymentType");

                    b.Navigation("ProductOrders");
                });

            modelBuilder.Entity("ListaZakupow.Model.Product", b =>
                {
                    b.Navigation("PhotosGallery");

                    b.Navigation("ProductOrders");

                    b.Navigation("ProductPrices");

                    b.Navigation("ProductsCategory");

                    b.Navigation("ProductTypes");
                });

            modelBuilder.Entity("ListaZakupow.Model.User", b =>
                {
                    b.Navigation("Addresss");

                    b.Navigation("Photos");

                    b.Navigation("Products");

                    b.Navigation("ShopingLists");
                });
#pragma warning restore 612, 618
        }
    }
}
